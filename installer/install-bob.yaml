---
- name: Install and configure BoB
  hosts: all
  become: true
  gather_facts: false

  tasks:
    - name: Pre-Req Packages and directories block
      tags:
        - never
        - pre-req
      block:
        - name: Install required packages
          ansible.builtin.package:
            name:
              - dnsmasq
              # A new version of this is needed (e.g. Fedora-40) | Rocky 9.4 is 4 years too old
              - ipxe-bootimgs-x86
              - nginx
              - qemu-img
              - wget

        - name: Install system python packages
          # These are required by ansible
          ansible.builtin.pip:
            name:
              - passlib
              - pyfiglet
              - uv

        - name: Make the required directories
          ansible.builtin.file:
            path: "{{ item }}"
            state: directory
            mode: '0755'
          loop:
            - "{{ BOB_ETC_DIRECTORY }}"
            - "{{ BOB_HOME_DIRECTORY }}"
            - "{{ BOB_TFTP_DIRECTORY }}"
            - "{{ NGINX_BASE_DIRECTORY }}/ipxe"
            - "{{ NGINX_BASE_DIRECTORY }}/build"
            - "{{ NGINX_BASE_DIRECTORY }}/alpine"
            - "{{ NGINX_BASE_DIRECTORY }}/fcos"

        - name: Put the iPXE EFI module in place
          ansible.builtin.copy:
            # If you are on Fedora, you can this proper source:
            # src: /usr/share/ipxe/ipxe-x86_64.efi
            # But for Rocky, use:
            src: ipxe-x86_64.efi
            dest: "{{ BOB_TFTP_DIRECTORY }}/"
            mode: '0644'

        - name: Allow dnsmasq to serve files
          community.general.sefcontext:
            target: '{{ BOB_TFTP_DIRECTORY }}(/.*)?'
            setype: public_content_t
            state: present

        - name: Apply new SELinux file context to TFTP area
          ansible.builtin.command: "restorecon -irv {{ BOB_TFTP_DIRECTORY }}"
          changed_when: true

        - name: Build the overlay
          ansible.builtin.command:
            cmd: ./mk-overlay.sh
            creates: builder.apkovl.tar.gz
          changed_when: true

        - name: Set SE:httpd_can_network_connect flag ON
          ansible.posix.seboolean:
            name: httpd_can_network_connect
            state: true
            persistent: true

        - name: Ensure the Wendy log exists
          ansible.builtin.copy:
            content: ""
            dest: /var/log/nginx/wendy.log
            mode: '0644'
            force: false

    # BOB Engine
    - name: The bob engine block
      tags:
        - update-bob
      block:
        - name: Put the bob script into place
          ansible.builtin.copy:
            src: ../bob.py
            dest: /usr/local/sbin/bob
            owner: root
            mode: '0750'

        - name: Put the bob engine yaml config in place
          ansible.builtin.template:
            src: engine.yaml.j2
            dest: "{{ BOB_ETC_DIRECTORY }}/config.yaml"
            force: true
            owner: root
            mode: '0644'

        - name: Put the bob host config in place
          ansible.builtin.copy:
            content: "[]\n"
            dest: "{{ BOB_ETC_DIRECTORY }}/hosts.yaml"
            force: false
            owner: root
            mode: '0644'

        - name: Put the bob man page into place
          ansible.builtin.copy:
            src: bob.1.man
            dest: /usr/share/man/man1/bob.1
            owner: root
            mode: '0644'

        - name: Remove any component pycache before copying the engine
          ansible.builtin.file:
            path: "../opt_bob/{{ item }}/__pycache__"
            state: absent
          loop:
            - robert
            - wendy

        - name: Put the bob (python) engine into place
          # TODO - what about b-o-b.db
          ansible.builtin.copy:
            src: ../opt_bob/
            dest: "{{ BOB_HOME_DIRECTORY }}/"
            owner: root
            mode: preserve
          notify: Restart WENDY

    # Ansible
    - name: Ansible block
      tags:
        - update-ansible
      block:
        # Make Ansible directory
        - name: Create the ansible directory first
          ansible.builtin.file:
            path: /etc/ansible
            state: directory
            mode: '0755'

        - name: Put Ansible engine into place
          ansible.builtin.copy:
            src: ./etc_ansible/
            dest: "/etc/ansible/"
            owner: root
            mode: preserve

        # Ensure there is a password
        - name: Generate Vault password
          # :- I got a permssion error trying to use builtin.password into this file
          # ansible.builtin.set_fact:
          #   vault_password: "{{ lookup('ansible.builtin.password', '/etc/ansible/vault.pwd') }}"
          ansible.builtin.shell:
            cmd: |
              uuidgen > /etc/ansible/vault.pwd
              chmod 600 /etc/ansible/vault.pwd
            creates: /etc/ansible/vault.pwd

        # Ensure there ia a a vault
        - name: Generate Ansible Vault
          ansible.builtin.shell:
            chdir: /etc/ansible
            cmd: |
              mkdir -p group_vars/all
              echo "---\nV_DEFAULT_ROCKY_PASS: RockyPass123" > group_vars/all/vault.yaml
              ansible-vault encrypt group_vars/all/vault.yaml
            creates: /etc/ansible/group_vars/all/vault.yaml

    # Robert
    - name: Wendy block
      tags:
        - robert
      block:
        - name: Robert service file
          ansible.builtin.template:
            src: robert.service.j2
            dest: /etc/systemd/system/robert.service
            owner: root
            mode: '0644'
          notify: Restart ROBERT

        - name: Make robert copy of project.toml
          ansible.builtin.copy:
            src: ../pyproject.toml
            dest: "{{ BOB_HOME_DIRECTORY }}/robert"
            owner: root
            mode: '0644'

        - name: Enable the Robert service
          ansible.builtin.service:
            name: robert
            enabled: true
            state: started

    # Wendy
    - name: Wendy block
      tags:
        - wendy
      block:
        - name: Wendy service file
          ansible.builtin.template:
            src: wendy.service.j2
            dest: /etc/systemd/system/wendy.service
            owner: root
            mode: '0644'
          notify: Restart WENDY

        - name: Enable the Wendy service
          ansible.builtin.service:
            name: wendy
            enabled: true
            state: started

    # DNSMASQ
    - name: The DNSMASQ block
      block:
        - name: Put the DNSMASQ config in place
          ansible.builtin.template:
            src: dnsmasq.conf.j2
            dest: "{{ BOB_DNSMASQ_DIRECTORY }}/bob.conf"
            owner: root
            mode: '0644'
          notify: Restart DNSMASQ

        - name: Enable the dnsmasq service
          ansible.builtin.service:
            name: dnsmasq
            enabled: true

    # NGINX
    - name: Any NGINX stuff block
      tags:
        - nginx
      block:
        - name: Configure Wendy log format
          ansible.builtin.template:
            src: ng-wendy-log.conf.j2
            dest: /etc/nginx/conf.d/wendy-log.conf
            mode: '0640'
          notify: Restart NGINX

        - name: Put the BoB proxy in place
          ansible.builtin.template:
            src: ng-bob.conf.j2
            dest: /etc/nginx/default.d/bob.conf
            mode: '0640'
          notify: Restart NGINX

        - name: Put the stage1 ipxe.cfg in place
          ansible.builtin.template:
            src: ipxe-stage1.cfg.j2
            dest: "{{ NGINX_BASE_DIRECTORY }}/ipxe/stage1.cfg"
            mode: '0644'

        - name: Copy the overlay
          ansible.builtin.copy:
            src: builder.apkovl.tar.gz
            dest: "{{ NGINX_BASE_DIRECTORY }}/build"
            owner: root
            mode: '0644'

        - name: Enable the NGINX service
          ansible.builtin.service:
            name: nginx
            enabled: true
            state: started

  handlers:
    - name: Restart DNSMASQ
      ansible.builtin.service:
        name: dnsmasq
        state: restarted

    - name: Restart NGINX
      ansible.builtin.service:
        name: nginx
        state: restarted

    - name: Restart ROBERT
      ansible.builtin.service:
        name: robert
        state: restarted

    - name: Restart WENDY
      ansible.builtin.service:
        name: wendy
        state: restarted
