---
- hosts: all
  become: true
  gather_facts: false

  tasks:
  - name: Pre-Req Packages and directories block
    block:
    - name: Install required packages
      ansible.builtin.package:
        name:
        - dnsmasq
        - ipxe-bootimgs-x86
        - nginx
        - python3-pip
        - qemu-img

    - name: Install any Python requirements
      ansible.builtin.pip:
        name:
        - flask
        - gunicorn

    - name: Make the required directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      loop:
      - "{{ BOB_ETC_DIRECTORY }}"
      - "{{ BOB_HOME_DIRECTORY }}"
      - "{{ BOB_TFTP_DIRECTORY }}"
      - "{{ BOB_HTML_DIRECTORY }}/ipxe"
      - "{{ BOB_HTML_DIRECTORY }}/build"
      - "{{ BOB_HTML_DIRECTORY }}/alpine"
      - "{{ BOB_HTML_DIRECTORY }}/fcos"
      - "{{ BOB_HTML_DIRECTORY }}/images"

    - name: Get status of Overlay
      ansible.builtin.stat:
        path: builder.apkovl.tar.gz
      register: overlay

    - name: Build the overlay
      ansible.builtin.shell: ./mk-overlay.sh
      when: not overlay.stat.exists
    tags: pre-req

  # BOB Engine
  - name: The bob engine block
    block:
    - name: Put the bob script into place
      ansible.builtin.copy:
        src: "../bob.sh"
        dest: /usr/local/sbin/bob
        owner: root
        mode: '0755'

    - name: Put the bob engine bash config in place
      ansible.builtin.template:
        src: "engine.sh.j2"
        dest: "{{ BOB_ETC_DIRECTORY }}/engine.sh"
        force: true
        owner: root
        mode: '0644'

    - name: Put the bob engine yaml config in place
      ansible.builtin.template:
        src: "engine.yaml.j2"
        dest: "{{ BOB_ETC_DIRECTORY }}/engine.yaml"
        force: true
        owner: root
        mode: '0644'

    - name: Put the bob host config in place
      ansible.builtin.copy:
        content: "---\n"
        dest: "{{ BOB_ETC_DIRECTORY }}/hosts.yaml"
        force: false
        owner: root
        mode: '0644'

    - name: Put the bob man page into place
      ansible.builtin.copy:
        src: "bob.1.man"
        dest: /usr/share/man/man1/bob.1
        owner: root
        mode: '0644'

    - name: Put the bob (python) engine into place
      ansible.builtin.copy:
        src: "../opt_bob/"
        dest: "{{ BOB_HOME_DIRECTORY }}/"
        owner: root
        mode: preserve
      notify: Restart WENDY

  # Wendy
  - name: Wendy API block
    block:
    - name: Wendy service file
      ansible.builtin.template:
        src: "wendy.service.j2"
        dest: "/etc/systemd/system/wendy.service"
        owner: root
        mode: '0644'
      notify: Restart WENDY

    - name: Enable the Wendy service
      ansible.builtin.service:
        name: wendy
        enabled: true
        state: started

  # DNSMASQ
  - name: The DNSMASQ block
    block:
    - name: Put the DNSMASQ config in place
      ansible.builtin.template:
        src: dnsmasq.conf.j2
        dest: "{{BOB_DNSMASQ_DIRECTORY}}/bob.conf"
        owner: root
        mode: '0644'
      notify: Restart DNSMASQ

    - name: Enable the dnsmasq service
      ansible.builtin.service:
        name: dnsmasq
        enabled: true

  # TFTP
  - name: Any TFTP stuff block
    block:
    - name: Put the iPXE EFI module in place
      ansible.builtin.copy:
        src: /usr/share/ipxe/ipxe-x86_64.efi
        dest: "{{ BOB_TFTP_DIRECTORY }}/"

  # NGINX
  - name: Any NGINX stuff block
    block:
    - name: Configure Wendy log format
      ansible.builtin.template:
        src: ng-wendy-log.conf.j2
        dest: "/etc/nginx/conf.d/wendy-log.conf"
      notify: Restart NGINX

    - name: Put the Wendy proxy in place
      ansible.builtin.template:
        src: ng-wendy.conf.j2
        dest: "/etc/nginx/default.d/wendy.conf"
      notify: Restart NGINX

    - name: Put the stage1 ipxe.cfg in place
      ansible.builtin.template:
        src: ipxe-stage1.cfg.j2
        dest: "{{BOB_HTML_DIRECTORY}}/ipxe/stage1.cfg"

    - name: Copy the overlay
      ansible.builtin.copy:
        src: "builder.apkovl.tar.gz"
        dest: "{{ BOB_HTML_DIRECTORY }}/build"
        owner: root
        mode: '0644'

    - name: Enable the NGINX service
      ansible.builtin.service:
        name: nginx
        enabled: true
        state: started
      
  handlers:
  - name: Restart DNSMASQ
    ansible.builtin.service:
      name: dnsmasq
      state: restarted

  - name: Restart NGINX
    ansible.builtin.service:
      name: nginx
      state: restarted

  - name: Restart WENDY
    ansible.builtin.service:
      name: wendy
      state: restarted
